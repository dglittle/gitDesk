-----------------------
       LEGEND
-   // note
+   // back-end API needed
*   // UI needed
-----------------------

Auth:
- use oauth for both oDesk and Git (all API, no UI hacking)
* splash page (step one: auth oDesk, step two: auth GitHub, step three: redirect to "add issue")

View Issue:
* Display pull request (and diff?)

API's needed:
+ Create Issue (odesk and github)
+ Add Bounty (creates odesk job, edits existing github issue)
+ Close and Pay

-----------------------
CONTRACTOR FINDS JOB
-----------------------
The issue link in the oDesk job doesn't go to GitHub, it goes to gitDesk interstitial
- If the contractor is already registered on gitDesk, redirect silently to GitHub issue
- Else, prompt to link their GH account to oDesk ("so you can get paid automatically for this issue")
- Then redirect to GH issue
-----------------------
AUTO-PAYMENT
-----------------------
Upon issue close, we figure out whom to pay:
- If only one pull request, pay him
- If >1 pull request, pay the last pull requester
- (Possibly complexity: notify the client and ask them if they want to pay others)
-----------------------
MERGING AND CLOSING
-----------------------
We'll assume that if you accept (i.e. merge) someone's pull request, you pay them (queue up in 2 days).
No "close and pay" on gitDesk.
Two exception cases:
1) You merged but don't want to pay: show pending payment in gitDesk, with "cancel" button
2) You didn't merge, but you do want to pay: show non-merged pull-requests, with "pay" button
-----------------------
UI PAGES REQUIRED
-----------------------
client auth
contractor auth
add issue
view issue